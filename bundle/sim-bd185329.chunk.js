import{A as e,ec as t,dY as a,ed as n,dZ as i,d7 as s,P as r,d as o,ee as l,bS as d,bT as m,ef as c,J as u,b_ as f,c1 as S,c3 as h,bk as g,ap as p,a6 as b,K as v,T as y,aq as O,b3 as P,v as I,G as A,ar as T}from"./detailed_results-af0faccd.chunk.js";import{k as H,b as W,c as R,E as w,i as E,B as k,I as D,a7 as B,Q as M,T as x,X as C,Y as N,Z as G,_ as J,a0 as j,$ as F,t as V}from"./individual_sim_ui-075d2254.chunk.js";const z=H({fieldName:"customRotation",numColumns:2,values:[{actionId:e.fromSpellId(53408),value:t.JudgementOfWisdom},{actionId:e.fromSpellId(48806),value:t.HammerOfWrath},{actionId:e.fromSpellId(48819),value:t.Consecration},{actionId:e.fromSpellId(48817),value:t.HolyWrath},{actionId:e.fromSpellId(48801),value:t.Exorcism},{actionId:e.fromSpellId(61411),value:t.ShieldOfRighteousness},{actionId:e.fromSpellId(48827),value:t.AvengersShield},{actionId:e.fromSpellId(53595),value:t.HammerOfTheRighteous},{actionId:e.fromSpellId(48952),value:t.HolyShield}]}),q={inputs:[W({fieldName:"hammerFirst",label:"Open with HotR",labelTooltip:"Open with Hammer of the Righteous instead of Shield of Righteousness in the standard rotation. Recommended for AoE."}),W({fieldName:"squeezeHolyWrath",label:"Squeeze Holy Wrath",labelTooltip:"Squeeze a Holy Wrath cast during sufficiently hasted GCDs (Bloodlust) in the standard rotation."}),R({fieldName:"waitSlack",label:"Max Wait Time (ms)",labelTooltip:"Maximum time in milliseconds to prioritize waiting for next Hammer/Shield to maintain 969. Affects standard and custom priority."}),W({fieldName:"useCustomPrio",label:"Use custom priority",labelTooltip:"Deviates from the standard 96969 rotation, using the priority configured below. Will still attempt to keep a filler GCD between Hammer and Shield."}),z]},_=w({fieldName:"aura",label:"Aura",values:[{name:"None",value:a.NoPaladinAura},{name:"Devotion Aura",value:a.DevotionAura},{name:"Retribution Aura",value:a.RetributionAura}]}),L=w({fieldName:"seal",label:"Seal",labelTooltip:"The seal active before encounter",values:[{name:"Vengeance",value:n.Vengeance},{name:"Command",value:n.Command}]}),K=w({fieldName:"judgement",label:"Judgement",labelTooltip:"Judgement debuff you will use on the target during the encounter.",values:[{name:"Wisdom",value:i.JudgementOfWisdom},{name:"Light",value:i.JudgementOfLight}]}),U=E({fieldName:"useAvengingWrath",label:"Use Avenging Wrath"}),Y={name:"Baseline Example",data:s.create({talentsString:"-05005135200132311333312321-511302012003",glyphs:{major1:r.GlyphOfSealOfVengeance,major2:r.GlyphOfRighteousDefense,major3:r.GlyphOfDivinePlea,minor1:o.GlyphOfSenseUndead,minor2:o.GlyphOfLayOnHands,minor3:o.GlyphOfBlessingOfKings}})},Z=l.create({hammerFirst:!1,squeezeHolyWrath:!0,waitSlack:300,useCustomPrio:!1,customRotation:d.create({spells:[m.create({spell:t.ShieldOfRighteousness}),m.create({spell:t.HammerOfTheRighteous}),m.create({spell:t.HolyShield}),m.create({spell:t.HammerOfWrath}),m.create({spell:t.Consecration}),m.create({spell:t.AvengersShield}),m.create({spell:t.JudgementOfWisdom}),m.create({spell:t.Exorcism})]})}),Q=c.create({aura:a.RetributionAura,judgement:i.JudgementOfWisdom}),X=u.create({flask:f.FlaskOfStoneblood,food:S.FoodDragonfinFilet,defaultPotion:h.IndestructiblePotion,prepopPotion:h.IndestructiblePotion}),$={name:"Preraid Preset",tooltip:k,enableWhen:e=>!0,gear:g.fromJsonString('{"items": [\n\t\t{"id":42549,"enchant":3818,"gems":[41396,49110]},\n\t\t{"id":40679},\n\t\t{"id":37635,"enchant":3852,"gems":[40015]},\n\t\t{"id":44188,"enchant":3605},\n\t\t{"id":39638,"enchant":1953,"gems":[36767,40089]},\n\t\t{"id":37682,"enchant":3850,"gems":[0]},\n\t\t{"id":39639,"enchant":3860,"gems":[36767,0]},\n\t\t{"id":37379,"enchant":3601,"gems":[40022,40008]},\n\t\t{"id":37292,"enchant":3822,"gems":[40089]},\n\t\t{"id":44243,"enchant":3606},\n\t\t{"id":37186},\n\t\t{"id":37257},\n\t\t{"id":44063,"gems":[36767,40015]},\n\t\t{"id":37220},\n\t\t{"id":37179,"enchant":2673},\n\t\t{"id":43085,"enchant":3849},\n\t\t{"id":40707}\n\t]}')},ee={name:"P1 Preset",tooltip:k,enableWhen:e=>!0,gear:g.fromJsonString('{"items": [\n\t\t{"id":40581,"enchant":3818,"gems":[41380,36767]},\n\t\t{"id":40387},\n\t\t{"id":40584,"enchant":3852,"gems":[40008]},\n\t\t{"id":40410,"enchant":3605},\n\t\t{"id":40579,"enchant":3832,"gems":[36767,40022]},\n\t\t{"id":39764,"enchant":3850,"gems":[0]},\n\t\t{"id":40580,"enchant":3860,"gems":[40008,0]},\n\t\t{"id":39759,"enchant":3601,"gems":[40008,40008]},\n\t\t{"id":40589,"enchant":3822},\n\t\t{"id":39717,"enchant":3606,"gems":[40089]},\n\t\t{"id":40718},\n\t\t{"id":40107},\n\t\t{"id":44063,"gems":[36767,40089]},\n\t\t{"id":37220},\n\t\t{"id":40345,"enchant":3788},\n\t\t{"id":40400,"enchant":3849},\n\t\t{"id":40707}\n\t]}')},te={name:"P2 Preset",tooltip:k,enableWhen:e=>!0,gear:g.fromJsonString('{\n      "items": [\n        {"id":46175,"enchant":3818,"gems":[41380,40088]},\n        {"id":45485,"gems":[40088]},\n        {"id":46177,"enchant":3852,"gems":[40034]},\n        {"id":45496,"enchant":3605,"gems":[40034]},\n        {"id":46039,"enchant":3832,"gems":[36767,36767]},\n        {"id":45111,"enchant":3850,"gems":[0]},\n        {"id":45487,"enchant":3860,"gems":[40008,40008,0]},\n        {"id":45825,"enchant":3601,"gems":[40008]},\n        {"id":45594,"enchant":3822,"gems":[40034,45880,40088]},\n        {"id":45988,"enchant":3606,"gems":[40008,40008]},\n        {"id":45471,"gems":[40088]},\n        {"id":45326},\n        {"id":45158},\n        {"id":46021},\n        {"id":45947,"enchant":3788,"gems":[40088]},\n        {"id":45587,"enchant":3849,"gems":[36767]},\n        {"id":45145}\n      ]\n    }')};class ae extends D{constructor(e,t){super(e,t,{cssClass:"protection-paladin-sim-ui",cssScheme:"paladin",knownIssues:[],epStats:[p.StatStamina,p.StatStrength,p.StatAgility,p.StatAttackPower,p.StatMeleeHit,p.StatSpellHit,p.StatMeleeCrit,p.StatExpertise,p.StatMeleeHaste,p.StatArmorPenetration,p.StatSpellPower,p.StatArmor,p.StatBonusArmor,p.StatDefense,p.StatBlock,p.StatBlockValue,p.StatDodge,p.StatParry,p.StatResilience,p.StatNatureResistance],epPseudoStats:[b.PseudoStatMainHandDps],epReferenceStat:p.StatSpellPower,displayStats:[p.StatHealth,p.StatArmor,p.StatBonusArmor,p.StatStamina,p.StatStrength,p.StatAgility,p.StatAttackPower,p.StatMeleeHit,p.StatMeleeCrit,p.StatMeleeHaste,p.StatExpertise,p.StatArmorPenetration,p.StatSpellPower,p.StatSpellHit,p.StatDefense,p.StatBlock,p.StatBlockValue,p.StatDodge,p.StatParry,p.StatResilience,p.StatNatureResistance],modifyDisplayStats:e=>{let t=new v;return y.freezeAllAndDo((()=>{e.getMajorGlyphs().includes(r.GlyphOfSealOfVengeance)&&e.getSpecOptions().seal==n.Vengeance&&(t=t.addStat(p.StatExpertise,10*B))})),{talents:t}},defaults:{gear:te.gear,epWeights:v.fromMap({[p.StatArmor]:.07,[p.StatBonusArmor]:.06,[p.StatStamina]:1.14,[p.StatStrength]:1,[p.StatAgility]:.62,[p.StatAttackPower]:.26,[p.StatExpertise]:.69,[p.StatMeleeHit]:.79,[p.StatMeleeCrit]:.3,[p.StatMeleeHaste]:.17,[p.StatArmorPenetration]:.04,[p.StatSpellPower]:.13,[p.StatBlock]:.52,[p.StatBlockValue]:.28,[p.StatDodge]:.46,[p.StatParry]:.61,[p.StatDefense]:.54},{[b.PseudoStatMainHandDps]:3.33}),consumes:X,rotation:Z,talents:Y.data,specOptions:Q,raidBuffs:O.create({giftOfTheWild:P.TristateEffectImproved,powerWordFortitude:P.TristateEffectImproved,strengthOfEarthTotem:P.TristateEffectImproved,arcaneBrilliance:!0,unleashedRage:!0,leaderOfThePack:P.TristateEffectRegular,icyTalons:!0,totemOfWrath:!0,demonicPact:500,swiftRetribution:!0,moonkinAura:P.TristateEffectRegular,sanctifiedRetribution:!0,manaSpringTotem:P.TristateEffectRegular,bloodlust:!0,thorns:P.TristateEffectImproved,devotionAura:P.TristateEffectImproved,shadowProtection:!0}),partyBuffs:I.create({}),individualBuffs:A.create({blessingOfKings:!0,blessingOfSanctuary:!0,blessingOfWisdom:P.TristateEffectImproved,blessingOfMight:P.TristateEffectImproved}),debuffs:T.create({judgementOfWisdom:!0,judgementOfLight:!0,misery:!0,faerieFire:P.TristateEffectImproved,ebonPlaguebringer:!0,totemOfWrath:!0,shadowMastery:!0,bloodFrenzy:!0,mangle:!0,exposeArmor:!0,sunderArmor:!0,vindication:!0,thunderClap:P.TristateEffectImproved,insectSwarm:!0})},playerIconInputs:[],rotationInputs:q,includeBuffDebuffInputs:[M],excludeBuffDebuffInputs:[],otherInputs:{inputs:[x,C,N,G,J,j,F,_,U,K,L,V]},encounterPicker:{showExecuteProportion:!1},presets:{talents:[Y],gear:[$,ee,te]}})}}export{Z as D,Y as G,ae as P,Q as a,X as b,ee as c,te as d};
//# sourceMappingURL=sim-bd185329.chunk.js.map
