{"version":3,"file":"sim-48c1f985.chunk.js","sources":["../../../ui/elemental_shaman/inputs.ts","../../../ui/elemental_shaman/presets.ts","../../../ui/elemental_shaman/sim.ts"],"sourcesContent":["import { IconPickerConfig } from '../core/components/icon_picker.js';\nimport { ElementalShaman_Rotation_RotationType as RotationType, ShamanShield } from '../core/proto/shaman.js';\nimport { ElementalShaman_Options as ShamanOptions } from '../core/proto/shaman.js';\nimport { AirTotem } from '../core/proto/shaman.js';\nimport { Spec } from '../core/proto/common.js';\nimport { ActionId } from '../core/proto_utils/action_id.js';\nimport { Player } from '../core/player.js';\n\nimport * as InputHelpers from '../core/components/input_helpers.js';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const Bloodlust = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecElementalShaman>({\n\tfieldName: 'bloodlust',\n\tid: ActionId.fromSpellId(2825),\n});\nexport const ShamanShieldInput = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecElementalShaman, ShamanShield>({\n\tfieldName: 'shield',\n\tvalues: [\n\t\t{ value: ShamanShield.NoShield, tooltip: 'No Shield' },\n\t\t{ actionId: ActionId.fromSpellId(57960), value: ShamanShield.WaterShield },\n\t\t{ actionId: ActionId.fromSpellId(49281), value: ShamanShield.LightningShield },\n\t],\n});\n\nexport const ElementalShamanRotationConfig = {\n\tinputs: [\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecElementalShaman, RotationType>({\n\t\t\tfieldName: 'type',\n\t\t\tlabel: 'Type',\n\t\t\tvalues: [\n\t\t\t\t{\n\t\t\t\t\tname: 'Adaptive', value: RotationType.Adaptive,\n\t\t\t\t\ttooltip: 'Dynamically adapts based on available mana to maximize CL casts without going OOM.',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Manual', value: RotationType.Manual,\n\t\t\t\t\ttooltip: 'Allows custom selection of which spells to use and to modify cast conditions.',\n\t\t\t\t},\n\t\t\t],\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecElementalShaman>({\n\t\t\tfieldName: 'inThunderstormRange',\n\t\t\tlabel: 'In Thunderstorm Range',\n\t\t\tlabelTooltip: 'Thunderstorm will hit all targets when cast. Ignores knockback.',\n\t\t\tshowWhen: (player: Player<Spec.SpecElementalShaman>) => player.getTalents().thunderstorm,\n\t\t}),\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecElementalShaman>({\n\t\t\tfieldName: 'lvbFsWaitMs',\n\t\t\tlabel: 'Max wait for LvB/FS (ms)',\n\t\t\tlabelTooltip: 'Amount of time the sim will wait if FS is about to fall off or LvB CD is about to come up. Setting to 0 will default to 175ms',\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecElementalShaman>({\n\t\t\tfieldName: 'useChainLightning',\n\t\t\tlabel: 'Use Chain Lightning in Rotation',\n\t\t\tlabelTooltip: 'Use Chain Lightning in rotation',\n\t\t\tenableWhen: (player: Player<Spec.SpecElementalShaman>) => player.getRotation().type == RotationType.Manual,\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecElementalShaman>({\n\t\t\tfieldName: 'useClOnlyGap',\n\t\t\tlabel: 'Use CL only as gap filler',\n\t\t\tlabelTooltip: 'Use CL to fill short gaps in LvB CD instead of on CD.',\n\t\t\tenableWhen: (player: Player<Spec.SpecElementalShaman>) => player.getRotation().type == RotationType.Manual && player.getRotation().useChainLightning,\n\t\t}),\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecElementalShaman>({\n\t\t\tfieldName: 'clMinManaPer',\n\t\t\tlabel: 'Min mana percent to use Chain Lightning',\n\t\t\tlabelTooltip: 'Customize minimum mana level to cast Chain Lightning. 0 will spam until OOM.',\n\t\t\tenableWhen: (player: Player<Spec.SpecElementalShaman>) => player.getRotation().type == RotationType.Manual && player.getRotation().useChainLightning,\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecElementalShaman>({\n\t\t\tfieldName: 'useFireNova',\n\t\t\tlabel: 'Use Fire Nova in Rotation',\n\t\t\tlabelTooltip: 'Fire Nova will hit all targets when cast.',\n\t\t\tenableWhen: (player: Player<Spec.SpecElementalShaman>) => player.getRotation().type == RotationType.Manual,\n\t\t}),\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecElementalShaman>({\n\t\t\tfieldName: 'fnMinManaPer',\n\t\t\tlabel: 'Min mana percent to use FireNova',\n\t\t\tlabelTooltip: 'Customize minimum mana level to cast Fire Nova. 0 will spam until OOM.',\n\t\t\tenableWhen: (player: Player<Spec.SpecElementalShaman>) => player.getRotation().type == RotationType.Manual && player.getRotation().useFireNova,\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecElementalShaman>({\n\t\t\tfieldName: 'overwriteFlameshock',\n\t\t\tlabel: 'Allow Flameshock to be overwritten',\n\t\t\tlabelTooltip: 'Will use flameshock at the end of the duration even if its still ticking if there isn\\'t enough time to cast lavaburst before expiring.',\n\t\t\tenableWhen: (player: Player<Spec.SpecElementalShaman>) => player.getRotation().type == RotationType.Manual,\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecElementalShaman>({\n\t\t\tfieldName: 'alwaysCritLvb',\n\t\t\tlabel: 'Only cast Lavaburst with FS',\n\t\t\tlabelTooltip: 'Will only cast Lavaburst if Flameshock will be active when the cast finishes.',\n\t\t\tenableWhen: (player: Player<Spec.SpecElementalShaman>) => player.getRotation().type == RotationType.Manual,\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecElementalShaman>({\n\t\t\tfieldName: 'useThunderstorm',\n\t\t\tlabel: 'Allow Thunderstorm to be cast.',\n\t\t\tlabelTooltip: 'Disabling this will stop thunderstorm from being cast entirely.',\n\t\t\tenableWhen: (player: Player<Spec.SpecElementalShaman>) => player.getRotation().type == RotationType.Manual,\n\t\t\tshowWhen: (player: Player<Spec.SpecElementalShaman>) => player.getTalents().thunderstorm,\n\t\t}),\n\t],\n};\n","import { Consumes } from '../core/proto/common.js';\n\nimport { EquipmentSpec } from '../core/proto/common.js';\nimport { Flask } from '../core/proto/common.js';\nimport { Food } from '../core/proto/common.js';\nimport { Glyphs } from '../core/proto/common.js';\nimport { Potions } from '../core/proto/common.js';\nimport { SavedRotation, SavedTalents } from '../core/proto/ui.js';\nimport { Spec } from '../core/proto/common.js';\nimport { Player } from '../core/player.js';\nimport { APLRotation } from '../core/proto/apl.js';\n\nimport { ElementalShaman_Rotation as ElementalShamanRotation, ElementalShaman_Options as ElementalShamanOptions, ShamanShield, ShamanMajorGlyph, ShamanMinorGlyph } from '../core/proto/shaman.js';\nimport { ElementalShaman_Rotation_RotationType as RotationType } from '../core/proto/shaman.js';\n\nimport {\n  AirTotem,\n  EarthTotem,\n  FireTotem,\n  WaterTotem,\n  ShamanTotems,\n} from '../core/proto/shaman.js';\n\n\nimport * as Tooltips from '../core/constants/tooltips.js';\nimport { Faction } from '../core/proto/common.js';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\nexport const StandardTalents = {\n  name: 'Standard',\n  data: SavedTalents.create({\n    talentsString: '0532001523212351322301351-005052031',\n    glyphs: Glyphs.create({\n      major1: ShamanMajorGlyph.GlyphOfLava,\n      major2: ShamanMajorGlyph.GlyphOfTotemOfWrath,\n      major3: ShamanMajorGlyph.GlyphOfLightningBolt,\n      minor1: ShamanMinorGlyph.GlyphOfThunderstorm,\n      minor2: ShamanMinorGlyph.GlyphOfWaterShield,\n      minor3: ShamanMinorGlyph.GlyphOfGhostWolf,\n    }),\n  }),\n};\n\nexport const DefaultRotation = ElementalShamanRotation.create({\n  totems: ShamanTotems.create({\n    earth: EarthTotem.StrengthOfEarthTotem,\n    air: AirTotem.WrathOfAirTotem,\n    fire: FireTotem.TotemOfWrath,\n    water: WaterTotem.ManaSpringTotem,\n    useFireElemental: true,\n  }),\n  type: RotationType.Adaptive,\n  fnMinManaPer: 66,\n  clMinManaPer: 33,\n  useChainLightning: false,\n  useFireNova: false,\n  useThunderstorm: true,\n});\n\nexport const DefaultOptions = ElementalShamanOptions.create({\n  shield: ShamanShield.WaterShield,\n  bloodlust: true,\n});\n\nexport const DefaultConsumes = Consumes.create({\n  defaultPotion: Potions.PotionOfWildMagic,\n  flask: Flask.FlaskOfTheFrostWyrm,\n  food: Food.FoodFishFeast,\n});\n\nexport const PRE_RAID_PRESET = {\n\tname: 'Pre-raid Preset',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\"id\":37180,\"enchant\":3820,\"gems\":[41285,42144]},\n\t\t{\"id\":37595},\n\t\t{\"id\":37673,\"enchant\":3810,\"gems\":[42144]},\n\t\t{\"id\":41610,\"enchant\":3722},\n\t\t{\"id\":39592,\"enchant\":3832,\"gems\":[42144,40025]},\n\t\t{\"id\":37788,\"enchant\":2332,\"gems\":[0]},\n\t\t{\"id\":39593,\"enchant\":3246,\"gems\":[40051,0]},\n\t\t{\"id\":40696,\"gems\":[40049,39998]},\n\t\t{\"id\":37791,\"enchant\":3719},\n\t\t{\"id\":44202,\"enchant\":3826,\"gems\":[39998]},\n\t\t{\"id\":43253,\"gems\":[40027]},\n\t\t{\"id\":37694},\n\t\t{\"id\":40682},\n\t\t{\"id\":37873},\n\t\t{\"id\":41384,\"enchant\":3834},\n\t\t{\"id\":40698},\n\t\t{\"id\":40708}\n  ]}`),\n};\n\nexport const P1_PRESET = {\n\tname: 'P1 Preset',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\"id\":40516,\"enchant\":3820,\"gems\":[41285,40027]},\n\t\t{\"id\":44661,\"gems\":[39998]},\n\t\t{\"id\":40286,\"enchant\":3810},\n\t\t{\"id\":44005,\"enchant\":3722,\"gems\":[40027]},\n\t\t{\"id\":40514,\"enchant\":3832,\"gems\":[42144,42144]},\n\t\t{\"id\":40324,\"enchant\":2332,\"gems\":[42144,0]},\n\t\t{\"id\":40302,\"enchant\":3246,\"gems\":[0]},\n\t\t{\"id\":40301,\"gems\":[40014]},\n\t\t{\"id\":40560,\"enchant\":3721},\n\t\t{\"id\":40519,\"enchant\":3826},\n\t\t{\"id\":37694},\n\t\t{\"id\":40399},\n\t\t{\"id\":40432},\n\t\t{\"id\":40255},\n\t\t{\"id\":40395,\"enchant\":3834},\n\t\t{\"id\":40401,\"enchant\":1128},\n\t\t{\"id\":40267}\n  ]}`),\n};\n\nexport const P2_PRESET = {\n\tname: 'P2 Preset',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n        {\"id\":46209,\"enchant\":3820,\"gems\":[41285,40048]},\n        {\"id\":45933,\"gems\":[39998]},\n        {\"id\":46211,\"enchant\":3810,\"gems\":[39998]},\n        {\"id\":45242,\"enchant\":3722,\"gems\":[39998]},\n        {\"id\":46206,\"enchant\":3832,\"gems\":[39998,39998]},\n        {\"id\":45460,\"enchant\":2332,\"gems\":[39998,0]},\n        {\"id\":45665,\"enchant\":3604,\"gems\":[39998,39998,0]},\n        {\"id\":45616,\"enchant\":3599,\"gems\":[39998,39998,39998]},\n        {\"id\":46210,\"enchant\":3721,\"gems\":[39998,40027]},\n        {\"id\":45537,\"enchant\":3606,\"gems\":[39998,40027]},\n        {\"id\":46046,\"gems\":[39998]},\n        {\"id\":45495,\"gems\":[39998]},\n        {\"id\":45518},\n        {\"id\":40255},\n        {\"id\":45612,\"enchant\":3834,\"gems\":[39998]},\n        {\"id\":45470,\"enchant\":1128,\"gems\":[39998]},\n        {\"id\":40267}\n      ]}`),\n};\n\nexport const P3_PRESET_HORDE = {\n\tname: 'P3 Preset Horde',\n\tenableWhen: (player: Player<Spec.SpecElementalShaman>) => player.getFaction() == Faction.Horde,\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n        {\"id\":48328,\"enchant\":3820,\"gems\":[41285,40153]},\n        {\"id\":47468,\"gems\":[40155]},\n        {\"id\":48330,\"enchant\":3810,\"gems\":[40113]},\n        {\"id\":47551,\"enchant\":3722,\"gems\":[40113]},\n        {\"id\":48326,\"enchant\":3832,\"gems\":[40113,40132]},\n        {\"id\":45460,\"enchant\":2332,\"gems\":[40113,0]},\n        {\"id\":48327,\"enchant\":3604,\"gems\":[40155,0]},\n        {\"id\":47447,\"enchant\":3599,\"gems\":[40132,40113,40113]},\n        {\"id\":47479,\"enchant\":3721,\"gems\":[40113,40113,40113]},\n        {\"id\":47456,\"enchant\":3606,\"gems\":[40113,40113]},\n        {\"id\":46046,\"gems\":[40155]},\n        {\"id\":45495,\"gems\":[40113]},\n        {\"id\":47477},\n        {\"id\":45518},\n        {\"id\":47422,\"enchant\":3834,\"gems\":[40113]},\n        {\"id\":47448,\"enchant\":1128,\"gems\":[40155]},\n        {\"id\":47666}\n      ]\n    }`),\n};\n\nexport const P3_PRESET_ALLI = {\n\tname: 'P3 Preset Alli',\n\tenableWhen: (player: Player<Spec.SpecElementalShaman>) => player.getFaction() == Faction.Alliance,\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n        {\"id\":48323,\"enchant\":3820,\"gems\":[41285,40155]},\n        {\"id\":47144,\"gems\":[40155]},\n        {\"id\":48321,\"enchant\":3810,\"gems\":[40113]},\n        {\"id\":47552,\"enchant\":3722,\"gems\":[40113]},\n        {\"id\":48325,\"enchant\":3832,\"gems\":[40113,40132]},\n        {\"id\":45460,\"enchant\":2332,\"gems\":[40113,0]},\n        {\"id\":48324,\"enchant\":3604,\"gems\":[40155,0]},\n        {\"id\":47084,\"enchant\":3599,\"gems\":[40132,40113,40113]},\n        {\"id\":47190,\"enchant\":3721,\"gems\":[40113,40113,40113]},\n        {\"id\":47099,\"enchant\":3606,\"gems\":[40113,40113]},\n        {\"id\":46046,\"gems\":[40155]},\n        {\"id\":45495,\"gems\":[40113]},\n        {\"id\":47188},\n        {\"id\":45518},\n        {\"id\":46980,\"enchant\":3834,\"gems\":[40113]},\n        {\"id\":47085,\"enchant\":1128,\"gems\":[40155]},\n        {\"id\":47666}\n      ]\n    }`),\n};\n\nexport const ROTATION_PRESET_BUILTIN = {\n  name: \"Legacy\",\n  rotation: SavedRotation.create({\n    specRotationOptionsJson: ElementalShamanRotation.toJsonString(DefaultRotation),\n  }),\n}\n\nexport const ROTATION_PRESET_BASIC_APL = {\n  name: 'Basic APL',\n  rotation: SavedRotation.create({\n    specRotationOptionsJson: ElementalShamanRotation.toJsonString(DefaultRotation),\n    rotation: APLRotation.fromJsonString(`{\n      \"enabled\": true,\n      \"prepullActions\": [\n        {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":58704}}},\"doAt\":\"-2s\"},\n        {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":57722}}},\"doAt\":\"-3s\"},\n        {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":58774}}},\"doAt\":\"-4s\"},\n        {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":58643}}},\"doAt\":\"-5s\"},\n        {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":3738}}},\"doAt\":\"-6s\"}\n      ],\n      \"priorityList\": [\n        {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpGe\",\"lhs\":{\"currentTime\":{}},\"rhs\":{\"const\":{\"val\":\"2s\"}}}},{\"spellIsReady\":{\"spellId\":{\"tag\":-1,\"spellId\":2825}}}]}},\"castSpell\":{\"spellId\":{\"tag\":-1,\"spellId\":2825}}}},\n        {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpGe\",\"lhs\":{\"currentTime\":{}},\"rhs\":{\"const\":{\"val\":\"2s\"}}}},{\"spellIsReady\":{\"spellId\":{\"spellId\":2825}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":2825}}}},\n        {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"spellIsReady\":{\"spellId\":{\"spellId\":26297}}},{\"spellIsReady\":{\"spellId\":{\"spellId\":16166}}}]}},\"strictSequence\":{\"actions\":[{\"castSpell\":{\"spellId\":{\"spellId\":26297}}},{\"castSpell\":{\"spellId\":{\"spellId\":16166}}}]}}},\n        {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"not\":{\"val\":{\"spellIsReady\":{\"spellId\":{\"spellId\":26297}}}}},{\"not\":{\"val\":{\"spellIsReady\":{\"spellId\":{\"spellId\":16166}}}}},{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":64701}}}}},{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":26297}}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":54758}}}},\n        {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"spellIsReady\":{\"spellId\":{\"spellId\":2894}}},{\"or\":{\"vals\":[{\"auraIsActive\":{\"auraId\":{\"itemId\":40255}}},{\"auraIsActive\":{\"auraId\":{\"itemId\":40682}}},{\"auraIsActive\":{\"auraId\":{\"itemId\":37660}}},{\"auraIsActive\":{\"auraId\":{\"itemId\":45518}}},{\"auraIsActive\":{\"auraId\":{\"itemId\":54572}}},{\"auraIsActive\":{\"auraId\":{\"itemId\":54588}}},{\"auraIsActive\":{\"auraId\":{\"itemId\":47213}}},{\"auraIsActive\":{\"auraId\":{\"itemId\":45490}}},{\"auraIsActive\":{\"auraId\":{\"itemId\":50348}}},{\"auraIsActive\":{\"auraId\":{\"itemId\":50353}}},{\"auraIsActive\":{\"auraId\":{\"itemId\":50360}}},{\"auraIsActive\":{\"auraId\":{\"itemId\":50365}}},{\"auraIsActive\":{\"auraId\":{\"itemId\":50345}}},{\"auraIsActive\":{\"auraId\":{\"itemId\":50340}}},{\"auraIsActive\":{\"auraId\":{\"itemId\":50398}}},{\"cmp\":{\"op\":\"OpEq\",\"lhs\":{\"auraNumStacks\":{\"auraId\":{\"itemId\":45308}}},\"rhs\":{\"const\":{\"val\":\"5\"}}}},{\"cmp\":{\"op\":\"OpEq\",\"lhs\":{\"auraNumStacks\":{\"auraId\":{\"itemId\":40432}}},\"rhs\":{\"const\":{\"val\":\"10\"}}}},{\"auraIsActive\":{\"auraId\":{\"spellId\":55637}}}]}}]}},\"strictSequence\":{\"actions\":[{\"castSpell\":{\"spellId\":{\"spellId\":33697}}},{\"castSpell\":{\"spellId\":{\"itemId\":40212}}},{\"castSpell\":{\"spellId\":{\"itemId\":37873}}},{\"castSpell\":{\"spellId\":{\"itemId\":45148}}},{\"castSpell\":{\"spellId\":{\"itemId\":48724}}},{\"castSpell\":{\"spellId\":{\"itemId\":50357}}},{\"castSpell\":{\"spellId\":{\"spellId\":2894}}}]}}},\n        {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":2894}}}}},{\"not\":{\"val\":{\"dotIsActive\":{\"spellId\":{\"spellId\":58704}}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":58704}}}},\n        {\"action\":{\"multidot\":{\"spellId\":{\"spellId\":49233},\"maxDots\":3,\"maxOverlap\":{\"const\":{\"val\":\"0ms\"}}}}},\n        {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"numberTargets\":{}},\"rhs\":{\"const\":{\"val\":\"1\"}}}},{\"spellIsReady\":{\"spellId\":{\"spellId\":49271}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":49271}}}},\n        {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":49233}}},\"rhs\":{\"const\":{\"val\":\"2\"}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":60043}}}},\n        {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":49238}}}}\n      ]\n    }`),\n  }),\n};","import { RaidBuffs } from '../core/proto/common.js';\nimport { PartyBuffs } from '../core/proto/common.js';\nimport { IndividualBuffs } from '../core/proto/common.js';\nimport { Debuffs } from '../core/proto/common.js';\nimport { Spec } from '../core/proto/common.js';\nimport { Stat } from '../core/proto/common.js';\nimport { TristateEffect } from '../core/proto/common.js'\nimport { Player } from '../core/player.js';\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { IndividualSimUI } from '../core/individual_sim_ui.js';\nimport { EventID, TypedEvent } from '../core/typed_event.js';\nimport { TotemsSection } from '../core/components/totem_inputs.js';\n\nimport * as IconInputs from '../core/components/icon_inputs.js';\nimport * as OtherInputs from '../core/components/other_inputs.js';\nimport * as Mechanics from '../core/constants/mechanics.js';\n\nimport * as ShamanInputs from './inputs.js';\nimport * as Presets from './presets.js';\nimport { shamanGlyphsConfig } from '../core/talents/shaman.js';\n\nexport class ElementalShamanSimUI extends IndividualSimUI<Spec.SpecElementalShaman> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecElementalShaman>) {\n\t\tsuper(parentElem, player, {\n\t\t\tcssClass: 'elemental-shaman-sim-ui',\n\t\t\tcssScheme: 'shaman',\n\t\t\t// List any known bugs / issues here and they'll be shown on the site.\n\t\t\tknownIssues: [\n\t\t\t],\n\t\t\twarnings: [\n\t\t\t\t// Warning to use all 4 totems if T6 2pc bonus is active.\n\t\t\t\t(simUI: IndividualSimUI<Spec.SpecElementalShaman>) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tupdateOn: TypedEvent.onAny([simUI.player.rotationChangeEmitter, simUI.player.currentStatsEmitter]),\n\t\t\t\t\t\tgetContent: () => {\n\t\t\t\t\t\t\tconst hasT62P = simUI.player.getCurrentStats().sets.includes('Skyshatter Regalia (2pc)');\n\t\t\t\t\t\t\tconst totems = simUI.player.getRotation().totems!;\n\t\t\t\t\t\t\tconst hasAll4Totems = totems && totems.earth && totems.air && totems.fire && totems.water;\n\t\t\t\t\t\t\tif (hasT62P && !hasAll4Totems) {\n\t\t\t\t\t\t\t\treturn 'T6 2pc bonus is equipped, but inactive because not all 4 totem types are being used.';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t],\n\n\t\t\t// All stats for which EP should be calculated.\n\t\t\tepStats: [\n\t\t\t\tStat.StatIntellect,\n\t\t\t\tStat.StatSpellPower,\n\t\t\t\tStat.StatSpellHit,\n\t\t\t\tStat.StatSpellCrit,\n\t\t\t\tStat.StatSpellHaste,\n\t\t\t\tStat.StatMP5,\n\t\t\t],\n\t\t\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\t\t\tepReferenceStat: Stat.StatSpellPower,\n\t\t\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\t\t\tdisplayStats: [\n\t\t\t\tStat.StatHealth,\n\t\t\t\tStat.StatMana,\n\t\t\t\tStat.StatStamina,\n\t\t\t\tStat.StatIntellect,\n\t\t\t\tStat.StatSpellPower,\n\t\t\t\tStat.StatSpellHit,\n\t\t\t\tStat.StatSpellCrit,\n\t\t\t\tStat.StatSpellHaste,\n\t\t\t\tStat.StatMP5,\n\t\t\t],\n\t\t\tmodifyDisplayStats: (player: Player<Spec.SpecElementalShaman>) => {\n\t\t\t\tlet stats = new Stats();\n\t\t\t\tstats = stats.addStat(Stat.StatSpellHit, player.getTalents().elementalPrecision * Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE);\n\t\t\t\tstats = stats.addStat(Stat.StatSpellCrit,\n\t\t\t\t\tplayer.getTalents().tidalMastery * 1 * Mechanics.SPELL_CRIT_RATING_PER_CRIT_CHANCE);\n\t\t\t\treturn {\n\t\t\t\t\ttalents: stats,\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tdefaults: {\n\t\t\t\t// Default equipped gear.\n\t\t\t\tgear: Presets.P1_PRESET.gear,\n\t\t\t\t// Default EP weights for sorting gear in the gear picker.\n\t\t\t\tepWeights: Stats.fromMap({\n\t\t\t\t\t[Stat.StatIntellect]: 0.22,\n\t\t\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t\t\t[Stat.StatSpellCrit]: 0.67,\n\t\t\t\t\t[Stat.StatSpellHaste]: 1.29,\n\t\t\t\t\t[Stat.StatMP5]: 0.08,\n\t\t\t\t}),\n\t\t\t\t// Default consumes settings.\n\t\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\t\t// Default rotation settings.\n\t\t\t\trotation: Presets.DefaultRotation,\n\t\t\t\t// Default talents.\n\t\t\t\ttalents: Presets.StandardTalents.data,\n\t\t\t\t// Default spec-specific settings.\n\t\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\t\t// Default raid/party buffs settings.\n\t\t\t\traidBuffs: RaidBuffs.create({\n\t\t\t\t\tarcaneBrilliance: true,\n\t\t\t\t\tdivineSpirit: true,\n\t\t\t\t\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tmoonkinAura: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tsanctifiedRetribution: true,\n\t\t\t\t\tdemonicPact: 500,\n\t\t\t\t}),\n\t\t\t\tpartyBuffs: PartyBuffs.create({\n\t\t\t\t}),\n\t\t\t\tindividualBuffs: IndividualBuffs.create({\n\t\t\t\t\tblessingOfKings: true,\n\t\t\t\t\tblessingOfWisdom: 2,\n\t\t\t\t\tvampiricTouch: true,\n\t\t\t\t}),\n\t\t\t\tdebuffs: Debuffs.create({\n\t\t\t\t\tfaerieFire: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tjudgementOfWisdom: true,\n\t\t\t\t\tmisery: true,\n\t\t\t\t\tcurseOfElements: true,\n\t\t\t\t\tshadowMastery: true,\n\t\t\t\t}),\n\t\t\t},\n\t\t\t// IconInputs to include in the 'Player' section on the settings tab.\n\t\t\tplayerIconInputs: [\n\t\t\t\tShamanInputs.ShamanShieldInput,\n\t\t\t\tShamanInputs.Bloodlust,\n\t\t\t],\n\t\t\t// Inputs to include in the 'Rotation' section on the settings tab.\n\t\t\trotationInputs: ShamanInputs.ElementalShamanRotationConfig,\n\t\t\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\t\t\tincludeBuffDebuffInputs: [\n\t\t\t],\n\t\t\texcludeBuffDebuffInputs: [\n\t\t\t],\n\t\t\t// Inputs to include in the 'Other' section on the settings tab.\n\t\t\totherInputs: {\n\t\t\t\tinputs: [\n\t\t\t\t\tOtherInputs.TankAssignment,\n\t\t\t\t],\n\t\t\t},\n\t\t\tcustomSections: [\n\t\t\t\tTotemsSection,\n\t\t\t],\n\t\t\tencounterPicker: {\n\t\t\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\t\t\tshowExecuteProportion: false,\n\t\t\t},\n\n\t\t\tpresets: {\n\t\t\t\t// Preset talents that the user can quickly select.\n\t\t\t\ttalents: [\n\t\t\t\t\tPresets.StandardTalents,\n\t\t\t\t],\n\t\t\t\t// Preset rotations that the user can quickly select.\n\t\t\t\trotations: [\n\t\t\t\t\tPresets.ROTATION_PRESET_BASIC_APL,\n\t\t\t\t\tPresets.ROTATION_PRESET_BUILTIN,\n\t\t\t\t],\n\t\t\t\t// Preset gear configurations that the user can quickly select.\n\t\t\t\tgear: [\n\t\t\t\t\tPresets.PRE_RAID_PRESET,\n\t\t\t\t\tPresets.P1_PRESET,\n\t\t\t\t\tPresets.P2_PRESET,\n\t\t\t\t\tPresets.P3_PRESET_ALLI,\n\t\t\t\t\tPresets.P3_PRESET_HORDE,\n\t\t\t\t],\n\t\t\t},\n\t\t});\n\t}\n}\n"],"names":["Bloodlust","InputHelpers.makeSpecOptionsBooleanIconInput","fieldName","id","ActionId","fromSpellId","ShamanShieldInput","InputHelpers.makeSpecOptionsEnumIconInput","values","value","ShamanShield","NoShield","tooltip","actionId","WaterShield","LightningShield","ElementalShamanRotationConfig","inputs","InputHelpers.makeRotationEnumInput","label","name","RotationType","Adaptive","Manual","InputHelpers.makeRotationBooleanInput","labelTooltip","showWhen","player","getTalents","thunderstorm","InputHelpers.makeRotationNumberInput","enableWhen","getRotation","type","useChainLightning","useFireNova","StandardTalents","data","SavedTalents","create","talentsString","glyphs","Glyphs","major1","ShamanMajorGlyph","GlyphOfLava","major2","GlyphOfTotemOfWrath","major3","GlyphOfLightningBolt","minor1","ShamanMinorGlyph","GlyphOfThunderstorm","minor2","GlyphOfWaterShield","minor3","GlyphOfGhostWolf","DefaultRotation","ElementalShamanRotation","totems","ShamanTotems","earth","EarthTotem","StrengthOfEarthTotem","air","AirTotem","WrathOfAirTotem","fire","FireTotem","TotemOfWrath","water","WaterTotem","ManaSpringTotem","useFireElemental","fnMinManaPer","clMinManaPer","useThunderstorm","DefaultOptions","ElementalShamanOptions","shield","bloodlust","DefaultConsumes","Consumes","defaultPotion","Potions","PotionOfWildMagic","flask","Flask","FlaskOfTheFrostWyrm","food","Food","FoodFishFeast","PRE_RAID_PRESET","Tooltips.BASIC_BIS_DISCLAIMER","gear","EquipmentSpec","fromJsonString","P1_PRESET","P2_PRESET","P3_PRESET_HORDE","getFaction","Faction","Horde","P3_PRESET_ALLI","Alliance","ROTATION_PRESET_BUILTIN","rotation","SavedRotation","specRotationOptionsJson","toJsonString","ROTATION_PRESET_BASIC_APL","APLRotation","ElementalShamanSimUI","IndividualSimUI","constructor","parentElem","super","cssClass","cssScheme","knownIssues","warnings","simUI","updateOn","TypedEvent","onAny","rotationChangeEmitter","currentStatsEmitter","getContent","hasT62P","getCurrentStats","sets","includes","hasAll4Totems","epStats","Stat","StatIntellect","StatSpellPower","StatSpellHit","StatSpellCrit","StatSpellHaste","StatMP5","epReferenceStat","displayStats","StatHealth","StatMana","StatStamina","modifyDisplayStats","stats","Stats","addStat","elementalPrecision","Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE","tidalMastery","Mechanics.SPELL_CRIT_RATING_PER_CRIT_CHANCE","talents","defaults","Presets.P1_PRESET","epWeights","fromMap","consumes","Presets.DefaultConsumes","Presets.DefaultRotation","Presets.StandardTalents","specOptions","Presets.DefaultOptions","raidBuffs","RaidBuffs","arcaneBrilliance","divineSpirit","giftOfTheWild","TristateEffect","TristateEffectImproved","moonkinAura","sanctifiedRetribution","demonicPact","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","blessingOfKings","blessingOfWisdom","vampiricTouch","debuffs","Debuffs","faerieFire","judgementOfWisdom","misery","curseOfElements","shadowMastery","playerIconInputs","ShamanInputs.ShamanShieldInput","ShamanInputs.Bloodlust","rotationInputs","ShamanInputs.ElementalShamanRotationConfig","includeBuffDebuffInputs","excludeBuffDebuffInputs","otherInputs","OtherInputs.TankAssignment","customSections","TotemsSection","encounterPicker","showExecuteProportion","presets","rotations","Presets.ROTATION_PRESET_BASIC_APL","Presets.ROTATION_PRESET_BUILTIN","Presets.PRE_RAID_PRESET","Presets.P2_PRESET","Presets.P3_PRESET_ALLI","Presets.P3_PRESET_HORDE"],"mappings":"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"}