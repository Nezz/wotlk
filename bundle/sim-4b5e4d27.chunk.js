import{A as e,as as t,at as a,dN as n,T as i,dO as s,d7 as r,Q as o,D as l,a as d,dP as m,dQ as c,dR as g,J as p,b_ as h,c1 as f,c3 as u,c$ as b,bk as S,ap as T,a6 as y,K as w,aq as R,b3 as P,v as O,G as v,ar as A}from"./detailed_results-af0faccd.chunk.js";import{m as k,j as M,i as W,a as E,b as C,c as B,B as x,I as N,L as F,G as I,O as D,T as H,t as G}from"./individual_sim_ui-075d2254.chunk.js";k({fieldName:"innervateTarget",id:e.fromSpellId(29166),extraCssClasses:["within-raid-sim-hide"],getValue:e=>e.getSpecOptions().innervateTarget?.targetIndex!=t,setValue:(e,n,i)=>{const s=n.getSpecOptions();s.innervateTarget=a.create({targetIndex:i?0:t}),n.setSpecOptions(e,s)}});const j=M({fieldName:"latencyMs",label:"Latency",labelTooltip:"Player latency, in milliseconds. Adds a delay to actions that cannot be spell queued."}),J=W({fieldName:"assumeBleedActive",label:"Assume Bleed Always Active",labelTooltip:"Assume bleed always exists for 'Rend and Tear' calculations. Otherwise will only calculate based on own rip/rake/lacerate.",extraCssClasses:["within-raid-sim-hide"]});function U(e){let t=e.getRotation();return t.manualParams&&t.rotationType==n.SingleTarget}function L(e){let t=e.getRotation();return t.manualParams&&t.rotationType==n.Aoe}const z={inputs:[E({fieldName:"rotationType",label:"Type",values:[{name:"Single Target",value:n.SingleTarget},{name:"AOE",value:n.Aoe}]}),C({fieldName:"prePopOoc",label:"Pre-pop Clearcasting",labelTooltip:"Start fight with clearcasting",showWhen:e=>e.getTalents().omenOfClarity,changeEmitter:e=>i.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),C({fieldName:"prePopBerserk",label:"Pre-pop Berserk",labelTooltip:"Pre pop berserk 1 sec before fight",showWhen:e=>e.getTalents().berserk,changeEmitter:e=>i.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),C({fieldName:"manualParams",label:"Manual Advanced Parameters",labelTooltip:"Manually specify advanced parameters, otherwise will use preset defaults"}),B({fieldName:"maxFfDelay",label:"Max FF Delay",labelTooltip:"Max allowed delay to wait for ff to come off CD in seconds",float:!0,positive:!0,showWhen:e=>e.getRotation().manualParams}),B({fieldName:"minRoarOffset",label:"Roar Offset",labelTooltip:"Targeted offset in Rip/Roar timings",showWhen:U}),B({fieldName:"ripLeeway",label:"Rip Leeway",labelTooltip:"Rip leeway when determining roar clips",showWhen:U}),C({fieldName:"useRake",label:"Use Rake",labelTooltip:"Use rake during rotation",showWhen:U}),C({fieldName:"useBite",label:"Bite during rotation",labelTooltip:"Use bite during rotation rather than just at end",showWhen:U}),B({fieldName:"biteTime",label:"Bite Time",labelTooltip:"Min seconds on Rip/Roar to bite",showWhen:e=>U(e)&&1==e.getRotation().useBite&&e.getRotation().biteModeType==s.Emperical}),C({fieldName:"flowerWeave",label:"Flower Weave",labelTooltip:"Fish for clearcasting during rotation with gotw",showWhen:L}),B({extraCssClasses:["used-in-apl"],fieldName:"raidTargets",label:"GotW Raid Targets",labelTooltip:"Raid size to assume for clearcast proc chance (can include pets as well, so 25 man raid potentically can be ~30)",showWhen:e=>e.aplRotation.enabled||L(e)&&1==e.getRotation().flowerWeave}),B({fieldName:"hotUptime",label:"Revitalize Hot Uptime",labelTooltip:"Hot uptime percentage to assume when theorizing energy gains",percent:!0,showWhen:e=>1==e.getRotation().useBite&&e.getRotation().biteModeType==s.Analytical})]},_={name:"Standard",data:r.create({talentsString:"-543202132322010053120030310511-203503012",glyphs:o.create({major1:l.GlyphOfOmenOfClarity,major2:l.GlyphOfSavageRoar,major3:l.GlyphOfShred,minor1:d.GlyphOfDash,minor2:d.GlyphOfTheWild,minor3:d.GlyphOfUnburdenedRebirth})})},q=m.create({rotationType:n.SingleTarget,bearWeaveType:c.None,minCombosForRip:5,minCombosForBite:5,useRake:!0,useBite:!0,mangleSpam:!1,biteModeType:s.Emperical,biteTime:4,berserkBiteThresh:25,berserkFfThresh:15,powerbear:!1,minRoarOffset:12,ripLeeway:3,maintainFaerieFire:!0,hotUptime:0,snekWeave:!1,flowerWeave:!1,raidTargets:30,maxFfDelay:.1,prePopOoc:!0}),K=g.create({latencyMs:100,assumeBleedActive:!0}),Q=p.create({flask:h.FlaskOfEndlessRage,food:f.FoodDragonfinFilet,defaultPotion:u.PotionOfSpeed}),V={name:"Legacy Default",rotation:b.create({specRotationOptionsJson:m.toJsonString(q)})},$={name:"PreRaid",tooltip:x,gear:S.fromJsonString('{"items": [\n\t\t{"id":42550,"enchant":3817,"gems":[41398,39996]},\n\t\t{"id":40678},\n\t\t{"id":37139,"enchant":3808,"gems":[39996]},\n\t\t{"id":37840,"enchant":3605},\n\t\t{"id":37219,"enchant":3832},\n\t\t{"id":44203,"enchant":3845,"gems":[0]},\n\t\t{"id":37409,"enchant":3604,"gems":[0]},\n\t\t{"id":40694,"gems":[49110,39996]},\n\t\t{"id":37644,"enchant":3823},\n\t\t{"id":44297,"enchant":3606},\n\t\t{"id":37642},\n\t\t{"id":37624},\n\t\t{"id":40684},\n\t\t{"id":37166},\n\t\t{"id":37883,"enchant":3827},\n\t\t{},\n\t\t{"id":40713}\n  ]}')},X={name:"P1 Preset",tooltip:x,gear:S.fromJsonString('{"items": [\n\t\t{"id":40473,"enchant":3817,"gems":[41398,39996]},\n\t\t{"id":44664,"gems":[39996]},\n\t\t{"id":40494,"enchant":3808,"gems":[39996]},\n\t\t{"id":40403,"enchant":3605},\n\t\t{"id":40539,"enchant":3832,"gems":[39996]},\n\t\t{"id":39765,"enchant":3845,"gems":[39996,0]},\n\t\t{"id":40541,"enchant":3604,"gems":[0]},\n\t\t{"id":40205,"gems":[39996]},\n\t\t{"id":44011,"enchant":3823,"gems":[39996,49110]},\n\t\t{"id":40243,"enchant":3606,"gems":[40014]},\n\t\t{"id":40474},\n\t\t{"id":40717},\n\t\t{"id":42987},\n\t\t{"id":40256},\n\t\t{"id":40388,"enchant":3789},\n\t\t{},\n\t\t{"id":39757}\n\t]}')},Y={name:"P2 Preset",tooltip:x,gear:S.fromJsonString('{"items": [\n\t\t{"id":46161,"enchant":3817,"gems":[41398,40002]},\n\t\t{"id":45517,"gems":[40002]},\n\t\t{"id":45245,"enchant":3808,"gems":[40002,40002]},\n\t\t{"id":46032,"enchant":3605,"gems":[40002,40058]},\n\t\t{"id":45473,"enchant":3832,"gems":[40002,40002,40002]},\n\t\t{"id":45869,"enchant":3845,"gems":[40037]},\n\t\t{"id":46158,"enchant":3604,"gems":[40002]},\n\t\t{"id":46095,"gems":[40002,40002,40002]},\n\t\t{"id":45536,"enchant":3823,"gems":[39996,39996,39996]},\n\t\t{"id":45564,"enchant":3606,"gems":[39996,39996]},\n\t\t{"id":46048,"gems":[45862]},\n\t\t{"id":45608,"gems":[39996]},\n\t\t{"id":45931},\n\t\t{"id":46038},\n\t\t{"id":45613,"enchant":3789,"gems":[40037,42702]},\n\t\t{},\n\t\t{"id":40713}\n\t]}')},Z={name:"P3 Preset",tooltip:x,gear:S.fromJsonString('{"items": [\n\t\t{"id":48204,"enchant":3817,"gems":[41398,40146]},\n\t\t  {"id":47060,"gems":[40117]},\n\t\t  {"id":48207,"enchant":3808,"gems":[40146]},\n\t\t  {"id":47545,"enchant":3605,"gems":[40117]},\n\t\t  {"id":48206,"enchant":3832,"gems":[40117,40146]},\n\t\t  {"id":45611,"enchant":3845,"gems":[40146,0]},\n\t\t  {"id":47945,"enchant":3604,"gems":[40112,40117,0]},\n\t\t  {"id":47112,"gems":[40146,40117,40117]},\n\t\t  {"id":48205,"enchant":3823,"gems":[40117,49110]},\n\t\t  {"id":47077,"enchant":3606,"gems":[40146,40117]},\n\t\t  {"id":47075,"gems":[40117]},\n\t\t  {"id":45608,"gems":[40117]},\n\t\t  {"id":45931},\n\t\t  {"id":47131},\n\t\t  {"id":47239,"enchant":3789,"gems":[40146,40117]},\n\t\t  {},\n\t\t  {"id":47668}\n\t]}')};class ee extends N{constructor(e,t){super(e,t,{cssClass:"feral-druid-sim-ui",cssScheme:"druid",knownIssues:[],warnings:[],epStats:[T.StatStrength,T.StatAgility,T.StatAttackPower,T.StatMeleeHit,T.StatMeleeCrit,T.StatMeleeHaste,T.StatArmorPenetration,T.StatExpertise],epPseudoStats:[y.PseudoStatMainHandDps],epReferenceStat:T.StatAttackPower,displayStats:[T.StatHealth,T.StatStrength,T.StatAgility,T.StatAttackPower,T.StatMeleeHit,T.StatMeleeCrit,T.StatMeleeHaste,T.StatArmorPenetration,T.StatExpertise,T.StatMana],defaults:{gear:Z.gear,epWeights:w.fromMap({[T.StatStrength]:2.4,[T.StatAgility]:2.39,[T.StatAttackPower]:1,[T.StatMeleeHit]:2.51,[T.StatMeleeCrit]:2.23,[T.StatMeleeHaste]:1.83,[T.StatArmorPenetration]:2.08,[T.StatExpertise]:2.44},{[y.PseudoStatMainHandDps]:16.5}),consumes:Q,rotation:q,talents:_.data,specOptions:K,raidBuffs:R.create({arcaneBrilliance:!0,giftOfTheWild:P.TristateEffectImproved,bloodlust:!0,manaSpringTotem:P.TristateEffectRegular,strengthOfEarthTotem:P.TristateEffectImproved,battleShout:P.TristateEffectImproved,unleashedRage:!0,icyTalons:!0,swiftRetribution:!0,sanctifiedRetribution:!0}),partyBuffs:O.create({heroicPresence:!0}),individualBuffs:v.create({blessingOfKings:!0,blessingOfMight:P.TristateEffectImproved}),debuffs:A.create({judgementOfWisdom:!0,bloodFrenzy:!0,giftOfArthas:!0,exposeArmor:!0,faerieFire:P.TristateEffectImproved,sunderArmor:!0,curseOfWeakness:P.TristateEffectRegular,heartOfTheCrusader:!0})},playerIconInputs:[],rotationInputs:z,includeBuffDebuffInputs:[F,I,D],excludeBuffDebuffInputs:[],otherInputs:{inputs:[j,J,H,G]},encounterPicker:{showExecuteProportion:!1},presets:{talents:[_],rotations:[V],gear:[$,X,Y,Z]}})}}export{q as D,ee as F,X as P,_ as S,K as a,Q as b,Y as c};
//# sourceMappingURL=sim-4b5e4d27.chunk.js.map
